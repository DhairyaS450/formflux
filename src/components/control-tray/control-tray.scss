/* Control Tray Component Styles */

/* Base action button styling */
.action-button {
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--Neutral-20); // Neutral background color
  color: var(--Neutral-60); // Neutral text color
  font-size: 1.25rem;
  line-height: 1.75rem;
  text-transform: lowercase; // All lowercase text
  cursor: pointer;
  animation: opacity-pulse 3s ease-in infinite; // Pulsing animation
  transition: all 0.2s ease-in-out; // Smooth transitions
  width: 48px; // Fixed width
  height: 48px; // Fixed height
  border-radius: 18px; // Rounded corners
  border: 1px solid rgba(0, 0, 0, 0); // Transparent border
  user-select: none; // Prevent text selection
  cursor: pointer;

  /* Focus state for accessibility */
  &:focus {
    border: 2px solid var(--Neutral-20);
    outline: 2px solid var(--Neutral-80);
  }

  /* Outlined variant */
  &.outlined {
    background: var(--Neutral-2);
    border: 1px solid var(--Neutral-20);
  }

  /* Disabled state */
  .no-action {
    pointer-events: none; // Disable interactions
  }

  /* Hover state */
  &:hover {
    background: rgba(0, 0, 0, 0); // Transparent background
    border: 1px solid var(--Neutral-20);
  }

  /* Connected state styling */
  &.connected {
    background: var(--Blue-800); // Blue background when connected
    color: var(--Blue-500); // Blue text

    &:hover {
      border: 1px solid var(--Blue-500); // Blue border on hover
    }
  }
}

/* CSS custom property for volume visualization */
@property --volume {
  syntax: "length";
  inherit: false;
  initial-value: 0px;
}

/* Disabled microphone button styling */
.disabled .mic-button,
.mic-button.disabled {
  &:before {
    background: rgba(0, 0, 0, 0); // No background when disabled
  }
}

/* Microphone button specific styling */
.mic-button {
  position: relative;
  background-color: var(--accent-red); // Red background for mic
  z-index: 1;
  color: black;
  transition: all 0.2s ease-in;

  /* Focus state */
  &:focus {
    border: 2px solid var(--Neutral-20);
    outline: 2px solid var(--Red-500); // Red outline
  }

  /* Hover state */
  &:hover {
    background-color: var(--Red-400); // Lighter red on hover
  }

  /* Volume visualization ring */
  &:before {
    position: absolute;
    z-index: -1;
    top: calc(var(--volume) * -1); // Dynamic positioning
    left: calc(var(--volume) * -1);
    display: block;
    content: "";
    opacity: 0.35; // Semi-transparent
    background-color: var(--Red-500); // Red ring
    width: calc(100% + var(--volume) * 2); // Dynamic width
    height: calc(100% + var(--volume) * 2); // Dynamic height
    border-radius: 24px; // Rounded ring
    transition: all 0.02s ease-in-out; // Fast transition for real-time updates
  }
}

/* Connect/disconnect toggle button */
.connect-toggle {
  &:focus {
    border: 2px solid var(--Neutral-20);
    outline: 2px solid var(--Neutral-80);
  }

  /* Not connected state */
  &:not(.connected) {
    background-color: var(--Blue-500); // Blue background
    color: var(--Neutral-5); // Light text
  }
}

/* Main control tray container */
.control-tray {
  position: absolute; // Absolute positioning
  bottom: 0; // Bottom of screen
  left: 50%; // Center horizontally
  transform: translate(-50%, 0); // Center alignment
  display: inline-flex;
  justify-content: center;
  align-items: flex-start;
  gap: 8px; // Space between elements
  padding-bottom: 18px; // Bottom padding

  /* Disabled state styling */
  .disabled .action-button,
  .action-button.disabled {
    background: rgba(0, 0, 0, 0); // Transparent background
    border: 1px solid var(--Neutral-30, #404547); // Gray border
    color: var(--Neutral-30); // Gray text
  }

  .connection-button-container {
    border-radius: 27px;
    border: 1px solid var(--Neutral-30);
    background: var(--Neutral-5);
    padding: 10px;
  }

  .connection-button-container {
    border-radius: 27px;
    border: 1px solid var(--Neutral-30);
    background: var(--Neutral-5);
    padding: 10px;
  }

  /* Connection status container */
  .connection-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 4px;

    /* Connection status text */
    .text-indicator {
      font-size: 11px; // Small text
      color: var(--Blue-500); // Blue text
      user-select: none; // Prevent selection
    }

    /* Hide text when not connected */
    &:not(.connected) {
      .text-indicator {
        opacity: 0; // Invisible when not connected
      }
    }
  }
}

/* Action buttons navigation container */
.actions-nav {
  background: var(--Neutral-5); // Light background
  border: 1px solid var(--Neutral-30); // Gray border
  border-radius: 27px; // Rounded corners
  display: inline-flex;
  gap: 12px; // Space between buttons
  align-items: center;
  overflow: clip; // Hide overflow
  padding: 10px; // Internal padding

  transition: all 0.6s ease-in; // Smooth transition

  /* Direct children styling */
  &>* {
    display: flex;
    align-items: center;
    flex-direction: column;
    gap: 1rem; // Vertical gap
  }
}

/* Pulsing animation for buttons */
@keyframes opacity-pulse {
  0% {
    opacity: 0.9; // Start at 90% opacity
  }

  50% {
    opacity: 1; // Peak at 100% opacity
  }

  100% {
    opacity: 0.9; 
  }
}

.stop-button {
  background-color: var(--accent-red);
  color: var(--Neutral-5);

  &:hover {
    background-color: var(--Red-400);
    border-color: var(--Neutral-20);
  }
}

.stop-button {
  background-color: var(--accent-red);
  color: var(--Neutral-5);

  &:hover {
    background-color: var(--Red-400);
    border-color: var(--Neutral-20);
  }
}
